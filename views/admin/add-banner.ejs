<style>
  body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
    /* background-color: #f5f5f5; */
  }

  .banner-list,
  .banner-form {
    max-width: 800px;
    margin: 20px auto;
    padding: 20px;
    background-color: #fff;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }

  table {
    width: 100%;
    border-collapse: collapse;
    margin-top: 10px;
  }

  th,
  td {
    padding: 8px;
    text-align: left;
    border-bottom: 1px solid #ddd;
  }

  th {
    background-color: #f2f2f2;
  }

  img#image-preview {
    max-width: 100px;
    max-height: 100px;
    margin-top: 10px;
  }

  /* form {
        display: flex;
        flex-direction: column; 
    } */

  label {
    font-weight: bold;
    margin-top: 10px;
  }

  input[type="text"],
  input[type="file"],
  input[type="date"],
  button {
    padding: 8px;
    /* margin: 5px 0; */
    border: 1px solid #ccc;
    border-radius: 4px;
  }

  input[type="checkbox"] {
    margin-right: 5px;
  }

  button[type="submit"],
  button[type="button"] {
    background-color: #007bff;
    color: #fff;
    border: none;
    border-radius: 4px;
    padding: 10px;
    cursor: pointer;
    font-weight: bold;
  }

  button[type="submit"]:hover,
  button[type="button"]:hover {
    background-color: #0056b3;
  }
</style>



<!-- Banner Adding/Editing Page -->
<div class="banner-form">
  <h1>Add Banner</h1>
  <form id="add-banner-form" enctype="multipart/form-data">
    <label for="title">Title:</label>
    <input type="text" id="title" name="title" required />
    <br />
    <label for="image">Image:</label>
    <div class="col-lg-6">
      <div class="card mb-4">
        <div class="card-header">
          <h4>Media</h4>
        </div>
        <div class="input-upload">
          <img src="/imgs/theme/upload.svg" id="imgView" alt="">
          <input class="form-control" id="input" name="image" onchange="viewImage(event),viewImage(event)" type="file">
        </div>
        <div class="image-cropper" style="display:none;">
          <img src="" id="croppedImg" alt="">
          <button type="button" id="saveButton" class="btn-sm btn-primary">Save</button>
        </div>
    </div>
  </div>
    <!-- <img id="image-preview" src="" alt="" /> -->
    <br />
    <!-- <label for="link">Link:</label>
            <input type="text" id="link" name="link">
            <br> -->
    <label for="start-date">Start Date:</label>
    <input class="form-control" type="date" id="start-date" name="startDate" required />
    <br />
    <label for="end-date">End Date:</label>
    <input class="form-control" type="date" id="end-date" name="endDate" required />
    <br />
    <!-- <label>
                <input type="checkbox" id="active" name="active">
                Active
            </label>-->
            <!-- <input type="file" id="cropped-image" name="croppedImage" style="display: none;" /> -->

    <br />
    <button type="submit">Save</button>
    <button type="button">Cancel</button>
  </form>
</div>




<script>

  function viewImage1(event) {
    document.getElementById('imgView1').src = URL.createObjectURL(event.target.files[0])
  }
  </script>

<script>
  function viewImage(event) {
      let input = event.target;
      let reader = new FileReader();
  
      reader.onload = function() {
        let dataURL = reader.result;
        let image = document.getElementById('imgView');
        image.src = dataURL;
  
        // Initialize Cropper.js on the image
        let cropper = new Cropper(image, {  
          aspectRatio: 2597 / 705, // Set the aspect ratio to 2597:705
        viewMode: 1, // Set the view mode to crop box
        guides: true, // Show the crop guides
        background: false, // Do not show the background behind the image
        autoCropArea: 1, // Set the initial crop area to cover the whole image
        zoomable: false
        });
  
        // Show the image cropper container
        let cropperContainer = document.querySelector('#croppedImg').parentNode;
        cropperContainer.style.display = 'block';
  
        // Update the cropped image when the "Save" button is clicked
        let saveButton = document.querySelector('#saveButton');
        saveButton.addEventListener('click', async function() {
          let croppedCanvas = cropper.getCroppedCanvas({
            width: 2579, 
            height: 705 
          });
          let croppedImage = document.getElementById("croppedImg");
          croppedImage.src = croppedCanvas.toDataURL('image/jpeg', 1.0);
  
          // Generate a unique name for the cropped image file based on the current timestamp
          let timestamp = new Date().getTime();
          let fileName = `cropped-img-${timestamp}.png`;
  
          await croppedCanvas.toBlob(blob => {
            let input = document.getElementById('input')
            let imgFile = new File([blob], fileName, blob)
            const fileList = new DataTransfer();
            fileList.items.add(imgFile);
            input.files = fileList.files
          });
          // cropperContainer.style.display = 'none';
        });
  
      };
  
      reader.readAsDataURL(input.files[0]);
    }
</script>

<script>
    document.getElementById("add-banner-form").addEventListener("submit", function (event) {
    event.preventDefault();
    // const croppedData = cropper.getData(); // Get cropped data
    const formData = new FormData(this);
    // formData.append("croppedData", JSON.stringify(croppedData)); // Add cropped data to the form data
    // ... Your existing AJAX code for submitting the form
    $.ajax({
            url: "/admin/add-banner",
            type: "POST",
            data: formData,
            dataType:"json",
            processData: false, // Prevent data processing for file uploads
            contentType: false, // Prevent automatic content-type header
            success: function(response) {
               if(response.status){
                Swal.fire({
  title: 'New Banner Added!',
  showClass: {
    popup: 'animate__animated animate__fadeInDown'
  },
  hideClass: {
    popup: 'animate__animated animate__fadeOutUp'
  }
}).then(()=>{
  location.replace('/admin/banners')
})
               }
            },
            error: function(xhr, status, error) {
                // Handle error response
                console.error("Error:", status, error);
            }
        });
  });
</script>

